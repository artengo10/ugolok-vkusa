
2) —Å–¥–µ–ª–∞—Ç—å –∫–∞—Ä—Ç—É —è–Ω–¥–µ–∫—Å —Å –æ—Ç–∑—ã–≤–∞–º–∏ 
7) –ø–æ–º–µ–Ω—è—Ç—å —Ñ–æ—Ç–æ–≥—Ä–∞—Ñ–∏–∏, –¥–æ–±–∞–≤–∏—Ç—å –≤–µ—Å—å –∫–æ–Ω—Ç–µ—Ç



my-website/
.next/
node_modules/
 public/                 # –°—Ç–∞—Ç–∏—á–µ—Å–∫–∏–µ —Ñ–∞–π–ª—ã
  logo.jpg (–∏–∫–æ–Ω–∫–∞ –Ω–∞ —Å–∞–π—Ç–µ –≤ —à–∞–ø–∫–µ) 
baner   
banner.logo.jpg
images/
products/
all/
bakery/
 coffee/
 double-espresso.jpg
espresso.jpg
atte.jpg
tiramisu.jpg
desserts/

src/
app/                   
about/
page.tsx
import SectionCard from '@/components/ui/section-card'

export default function About() {
    return (
        <div className="container mx-auto px-4 py-8">
            <SectionCard>
                <h1 className="text-3xl font-bold mb-6">–û –Ω–∞—à–µ–º –∫–∞—Ñ–µ</h1>

                <div className="grid md:grid-cols-2 gap-8 mb-8">
                    <div>
                        <h2 className="text-xl font-semibold mb-4">–ü–æ—á–µ–º—É –º—ã?</h2>
                        <p className="text-muted-foreground mb-4">
                            –ú—ã –æ—Ç–∫—Ä—ã–ª–∏—Å—å –≤ 2015 –≥–æ–¥—É —Å —Ü–µ–ª—å—é —Å–æ–∑–¥–∞–≤–∞—Ç—å –≤–∫—É—Å–Ω—É—é –∏ –∫–∞—á–µ—Å—Ç–≤–µ–Ω–Ω—É—é –µ–¥—É –¥–ª—è –Ω–∞—à–∏—Ö –≥–æ—Å—Ç–µ–π.
                            –í—Å–µ –Ω–∞—à–∏ –±–ª—é–¥–∞ –≥–æ—Ç–æ–≤—è—Ç—Å—è –∏–∑ —Å–≤–µ–∂–∏—Ö –ø—Ä–æ–¥—É–∫—Ç–æ–≤ –µ–∂–µ–¥–Ω–µ–≤–Ω–æ.
                        </p>
                        <p className="text-muted-foreground">
                            –ú—ã –∏—Å–ø–æ–ª—å–∑—É–µ–º —Ç–æ–ª—å–∫–æ –∫–∞—á–µ—Å—Ç–≤–µ–Ω–Ω—ã–µ –∏–Ω–≥—Ä–µ–¥–∏–µ–Ω—Ç—ã: —Å–≤–µ–∂–∏–µ –æ–≤–æ—â–∏, –æ—Ç–±–æ—Ä–Ω–æ–µ –º—è—Å–æ,
                            –Ω–∞—Ç—É—Ä–∞–ª—å–Ω—ã–µ —Å–æ—É—Å—ã –∏ —Å–≤–µ–∂—É—é —Ä—ã–±—É –¥–ª—è —Ä–æ–ª–ª–æ–≤.
                        </p>
                    </div>

                    <div>
                        <h2 className="text-xl font-semibold mb-4">–ß–∞—Å—ã —Ä–∞–±–æ—Ç—ã</h2>
                        <ul className="text-muted-foreground space-y-2">
                            <li>–ü–Ω-–ß—Ç: 10:00 - 23:00</li>
                            <li>–ü—Ç-–°–±: 10:00 - 00:00</li>
                            <li>–í—Å: 10:00 - 22:00</li>
                        </ul>
                    </div>
                </div>
            </SectionCard>
        </div>
    )
}
 contact/
 page.tsx
export default function Contact() {
    return (
        <div className="container mx-auto px-4 py-8">
            <div className="max-w-2xl mx-auto bg-card text-card-foreground p-8 rounded-lg shadow-md">
                <h1 className="text-3xl font-bold mb-6">–ö–æ–Ω—Ç–∞–∫—Ç—ã</h1>
                <div className="space-y-4 text-muted-foreground">
                    <p className="flex items-center gap-2">
                        <span>üìç</span>
                        <span>–ê–¥—Ä–µ—Å: —É–ª. –ö–æ—Ñ–µ–π–Ω–∞—è, 15</span>
                    </p>
                    <p className="flex items-center gap-2">
                        <span>üìû</span>
                        <span>–¢–µ–ª–µ—Ñ–æ–Ω: +7 (999) 123-45-67</span>
                    </p>
                    <p className="flex items-center gap-2">
                        <span>‚úâÔ∏è</span>
                        <span>Email: hello@coffee-shop.ru</span>
                    </p>
                </div>
            </div>
        </div>
    )
}
favicon.ico
globals.css
@import "tailwindcss";
@import "tw-animate-css";

@custom-variant dark (&:is(.dark *));

@theme inline {
  --color-background: var(--background);
  --color-foreground: var(--foreground);
  --font-sans: var(--font-geist-sans);
  --font-mono: var(--font-geist-mono);
  --color-sidebar-ring: var(--sidebar-ring);
  --color-sidebar-border: var(--sidebar-border);
  --color-sidebar-accent-foreground: var(--sidebar-accent-foreground);
  --color-sidebar-accent: var(--sidebar-accent);
  --color-sidebar-primary-foreground: var(--sidebar-primary-foreground);
  --color-sidebar-primary: var(--sidebar-primary);
  --color-sidebar-foreground: var(--sidebar-foreground);
  --color-sidebar: var(--sidebar);
  --color-chart-5: var(--chart-5);
  --color-chart-4: var(--chart-4);
  --color-chart-3: var(--chart-3);
  --color-chart-2: var(--chart-2);
  --color-chart-1: var(--chart-1);
  --color-ring: var(--ring);
  --color-input: var(--input);
  --color-border: var(--border);
  --color-destructive: var(--destructive);
  --color-accent-foreground: var(--accent-foreground);
  --color-accent: var(--accent);
  --color-muted-foreground: var(--muted-foreground);
  --color-muted: var(--muted);
  --color-secondary-foreground: var(--secondary-foreground);
  --color-secondary: var(--secondary);
  --color-primary-foreground: var(--primary-foreground);
  --color-primary: var(--primary);
  --color-popover-foreground: var(--popover-foreground);
  --color-popover: var(--popover);
  --color-card-foreground: var(--card-foreground);
  --color-card: var(--card);
  --radius-sm: calc(var(--radius) - 4px);
  --radius-md: calc(var(--radius) - 2px);
  --radius-lg: var(--radius);
  --radius-xl: calc(var(--radius) + 4px);
}

:root {
  --radius: 0.5rem;
  /* –°–í–ï–¢–õ–ê–Ø –¢–ï–ú–ê */
  --background: oklch(0.985 0.002 106.423);
  --foreground: oklch(0.208 0.042 45.755);
  --card: oklch(1 0 0);
  --card-foreground: oklch(0.208 0.042 45.755);
  --primary: oklch(0.45 0.07 55.695);
  --primary-foreground: oklch(0.985 0.002 106.423);
  --secondary: oklch(0.969 0.007 56.366);
  --secondary-foreground: oklch(0.208 0.042 45.755);
  --muted: oklch(0.969 0.007 56.366);
  --muted-foreground: oklch(0.551 0.027 58.071);
  --accent: oklch(0.969 0.007 56.366);
  --accent-foreground: oklch(0.208 0.042 45.755);
  --destructive: oklch(0.577 0.245 27.325);
  --border: oklch(0.929 0.013 106.508);
  --input: oklch(0.929 0.013 106.508);
  --ring: oklch(0.45 0.07 55.695);
}

.dark {
  /* –¢–ï–ú–ù–ê–Ø –¢–ï–ú–ê - —Ç–µ–ø–ª–∞—è –∫–æ—Ñ–µ–π–Ω–∞—è –ø–∞–ª–∏—Ç—Ä–∞ */
  --background: oklch(0.2 0.04 25.5); /* #321818 - —á—É—Ç—å —Å–≤–µ—Ç–ª–µ–µ */
  --foreground: oklch(0.95 0.01 100);
  --card: oklch(0.2 0.04 25.5);
  --card-foreground: oklch(0.97 0.01 100);
  --primary: oklch(0.55 0.12 55.7); /* –¢–µ–ø–ª—ã–π –∞–∫—Ü–µ–Ω—Ç */
  --primary-foreground: oklch(0.97 0.01 100);
  --secondary: oklch(0.25 0.04 25.5);
  --secondary-foreground: oklch(0.97 0.01 100);
  --muted: oklch(0.25 0.04 25.5);
  --muted-foreground: oklch(0.7 0.04 25.5);
  --accent: oklch(0.25 0.04 25.5);
  --accent-foreground: oklch(0.97 0.01 100);
  --destructive: oklch(0.7 0.19 27.3);
  --border: oklch(0.3 0.05 25.5);
  --input: oklch(0.25 0.04 25.5);
  --ring: oklch(0.55 0.12 55.7);
}

@layer base {
  * {
    @apply border-border outline-ring/50;
  }
  body {
    @apply bg-background text-foreground;
  }
}

@keyframes fadeInUp {
  from {
    opacity: 0;
    transform: translateY(30px);
  }
  to {
    opacity: 1;
    transform: translateY(0);
  }
}

.animate-fade-in-up {
  animation: fadeInUp 0.8s ease-out forwards;
}

@keyframes bounce {
  0%,
  20%,
  50%,
  80%,
  100% {
    transform: translateY(0);
  }
  40% {
    transform: translateY(-10px);
  }
  60% {
    transform: translateY(-5px);
  }
}

.animate-bounce {
  animation: bounce 2s infinite;
}
/* –ü–ª–∞–≤–Ω–∞—è –ø—Ä–æ–∫—Ä—É—Ç–∫–∞ –¥–ª—è –≤—Å–µ–≥–æ —Å–∞–π—Ç–∞ */
html {
  scroll-behavior: smooth;
}

layout.tsx
    import { ThemeProvider } from '@/components/ui/theme-provider'
import Header from '@/components/layout/Header'
import './globals.css'
import { SearchProvider } from '@/lib/contexts/search-context'

export const metadata = {
  title: {
    default: '–ö–∞—Ñ–µ –£–≥–æ–ª–æ–∫ –í–∫—É—Å–∞ | –î–æ—Å—Ç–∞–≤–∫–∞ –ø–∏—Ü—Ü—ã, —Ä–æ–ª–ª–æ–≤, –±—É—Ä–≥–µ—Ä–æ–≤',
    template: '%s | –ö–∞—Ñ–µ –£–≥–æ–ª–æ–∫ –í–∫—É—Å–∞'
  },
  description: '–ö–∞—Ñ–µ –£–≥–æ–ª–æ–∫ –í–∫—É—Å–∞ - –¥–æ—Å—Ç–∞–≤–∫–∞ –≤–∫—É—Å–Ω–æ–π –ø–∏—Ü—Ü—ã, —Å–≤–µ–∂–∏—Ö —Ä–æ–ª–ª–æ–≤, —Å–æ—á–Ω—ã—Ö –±—É—Ä–≥–µ—Ä–æ–≤ –∏ –¥—Ä—É–≥–∏—Ö –±–ª—é–¥. –ë—ã—Å—Ç—Ä–∞—è –¥–æ—Å—Ç–∞–≤–∫–∞ –ø–æ –≥–æ—Ä–æ–¥—É –∏ —Å–∞–º–æ–≤—ã–≤–æ–∑.',
  keywords: '–ø–∏—Ü—Ü–∞, —Ä–æ–ª–ª—ã, –±—É—Ä–≥–µ—Ä—ã, –¥–æ—Å—Ç–∞–≤–∫–∞ –µ–¥—ã, –∫–∞—Ñ–µ, —É–≥–æ–ª–æ–∫ –≤–∫—É—Å–∞',
  openGraph: {
    title: '–ö–∞—Ñ–µ –£–≥–æ–ª–æ–∫ –í–∫—É—Å–∞',
    description: '–î–æ—Å—Ç–∞–≤–∫–∞ –≤–∫—É—Å–Ω–æ–π –ø–∏—Ü—Ü—ã, —Ä–æ–ª–ª–æ–≤ –∏ –±—É—Ä–≥–µ—Ä–æ–≤',
    type: 'website',
  },
}

export default function RootLayout({
  children,
}: {
  children: React.ReactNode
}) {
  return (
    <html lang="ru" suppressHydrationWarning>
      <head>
        {/* –ú–æ–∂–Ω–æ –¥–æ–±–∞–≤–∏—Ç—å –¥–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã–µ meta-—Ç–µ–≥–∏ –∑–¥–µ—Å—å */}
      </head>
      <body>
        <ThemeProvider attribute="class" defaultTheme="system" enableSystem>
          <SearchProvider>
            <Header />
            <main>{children}</main>
          </SearchProvider>
        </ThemeProvider>
      </body>
    </html>
  )
}
page.tsx     
'use client'

import { useState, useRef, useEffect } from 'react'
import { HeroSection, DeliveryInfo } from '@/components/home'
import { ProductModal, ProductGrid, CategoryFilter } from '@/components/products'
import { useCartStore } from '@/lib/stores/cart-store'
import { products } from '@/lib/data'
import { Product } from '@/lib/data'
import { useSearch } from '@/lib/contexts/search-context' // –ò–º–ø–æ—Ä—Ç–∏—Ä—É–µ–º —Ö—É–∫

export default function Home() {
  const [isModalOpen, setIsModalOpen] = useState(false)
  const [selectedCategory, setSelectedCategory] = useState('all')
  const addItem = useCartStore((state) => state.addItem)
  const { selectedProduct, setSelectedProduct } = useSearch() // –ò—Å–ø–æ–ª—å–∑—É–µ–º –∫–æ–Ω—Ç–µ–∫—Å—Ç

  const menuSectionRef = useRef<HTMLDivElement>(null)

  const filteredProducts = selectedCategory === 'all'
    ? products
    : products.filter(product => product.category === selectedCategory)

  const scrollToMenu = () => {
    menuSectionRef.current?.scrollIntoView({
      behavior: 'smooth',
      block: 'start'
    })
  }

  const handleProductSelect = (product: Product) => {
    setSelectedProduct(product)
    setIsModalOpen(true)
  }

  const handleAddToCart = (product: Product) => {
    addItem({
      id: product.id,
      name: product.name,
      price: product.price,
      image: product.image
    })
  }

  // –°–ª–µ–¥–∏–º –∑–∞ –∏–∑–º–µ–Ω–µ–Ω–∏—è–º–∏ selectedProduct –∏–∑ –∫–æ–Ω—Ç–µ–∫—Å—Ç–∞
  useEffect(() => {
    if (selectedProduct) {
      setIsModalOpen(true)
    }
  }, [selectedProduct])

  const handleCloseModal = () => {
    setIsModalOpen(false)
    setSelectedProduct(null) // –°–±—Ä–∞—Å—ã–≤–∞–µ–º –ø—Ä–∏ –∑–∞–∫—Ä—ã—Ç–∏–∏
  }

  return (
    <>
      <HeroSection onMenuClick={scrollToMenu} />

      <main className="container mx-auto px-4 py-16">
        <section ref={menuSectionRef} id="menu-section" className="text-center mb-16">
          <h2 className="text-3xl md:text-4xl font-heading font-bold mb-6">–ù–∞—à–µ –º–µ–Ω—é</h2>
          <p className="text-muted-foreground text-lg max-w-2xl mx-auto">
            –û—Ç–∫—Ä–æ–π—Ç–µ –¥–ª—è —Å–µ–±—è –±–æ–≥–∞—Ç—ã–π –≤–∫—É—Å –Ω–∞—à–µ–π –ø–∏—Ü—Ü—ã, —Å–≤–µ–∂–∏—Ö —Ä–æ–ª–ª–æ–≤ –∏ —Å–æ—á–Ω—ã—Ö –±—É—Ä–≥–µ—Ä–æ–≤,
            –ø—Ä–∏–≥–æ—Ç–æ–≤–ª–µ–Ω–Ω—ã—Ö —Å –ª—é–±–æ–≤—å—é –∏ –≤–Ω–∏–º–∞–Ω–∏–µ–º –∫ –¥–µ—Ç–∞–ª—è–º
          </p>
        </section>

        <DeliveryInfo />

        <CategoryFilter
          selectedCategory={selectedCategory}
          onCategoryChange={setSelectedCategory}
        />

        <ProductGrid
          products={filteredProducts}
          onProductSelect={handleProductSelect}
        />
      </main>

      <ProductModal
        product={selectedProduct}
        isOpen={isModalOpen}
        onClose={handleCloseModal}
        onAddToCart={handleAddToCart}
      />
    </>
  )
}

components/     (–≤ –ø–∞–ø–∫–µ src)
cart/
 CartDialog.tsx
'use client'

import { useState } from 'react'
import { Button } from '@/components/ui/button'
import {
    Dialog,
    DialogContent,
    DialogHeader,
    DialogTitle,
} from '@/components/ui/dialog'
import { useCartStore } from '@/lib/stores/cart-store'
import CartTabs from './CartTabs'
import CartOrderForm from './CartOrderForm'
import CartItemsList from './CartItemsList'

interface CartDialogProps {
    open: boolean
    onOpenChange: (open: boolean) => void
}

export default function CartDialog({ open, onOpenChange }: CartDialogProps) {
    const [orderType, setOrderType] = useState('delivery')
    const [formData, setFormData] = useState({
        name: '',
        phone: '',
        address: '',
        pickupTime: ''
    })

    const { items, totalPrice, clearCart } = useCartStore()

    const handleInputChange = (e: React.ChangeEvent<HTMLInputElement>) => {
        const { name, value } = e.target
        setFormData(prev => ({ ...prev, [name]: value }))
    }

    const handleOrder = () => {
        const order = {
            type: orderType,
            items,
            customer: formData,
            total: totalPrice()
        }
        console.log('–ó–∞–∫–∞–∑ —Å–æ–∑–¥–∞–Ω:', order)
        clearCart()
        onOpenChange(false)
        setFormData({ name: '', phone: '', address: '', pickupTime: '' })
    }

    const isFormInvalid = !formData.name || !formData.phone ||
        (orderType === 'delivery' ? !formData.address : !formData.pickupTime)

    return (
        <Dialog open={open} onOpenChange={onOpenChange}>
            <DialogContent className="sm:max-w-md w-[95vw] max-h-[90vh] overflow-hidden flex flex-col p-0">
                <DialogHeader className="px-6 pt-6 pb-4 border-b bg-muted/30">
                    <DialogTitle className="text-2xl font-heading text-center">
                        –í–∞—à –∑–∞–∫–∞–∑
                    </DialogTitle>
                </DialogHeader>

                <div className="flex-1 overflow-y-auto px-6 py-4 space-y-6">
                    <CartTabs value={orderType} onValueChange={setOrderType} />

                    <CartOrderForm
                        orderType={orderType}
                        formData={formData}
                        onInputChange={handleInputChange}
                    />

                    {items.length > 0 && (
                        <div className="border-t pt-4">
                            <h3 className="font-semibold mb-3 text-lg">–¢–æ–≤–∞—Ä—ã –≤ –∑–∞–∫–∞–∑–µ</h3>
                            <CartItemsList />
                        </div>
                    )}

                    {items.length === 0 && (
                        <div className="flex items-center justify-center h-40">
                            <p className="text-muted-foreground text-center text-lg">
                                –ö–æ—Ä–∑–∏–Ω–∞ –ø—É—Å—Ç–∞
                            </p>
                        </div>
                    )}
                </div>

                {items.length > 0 && (
                    <div className="border-t px-6 py-4 bg-muted/30">
                        <div className="flex justify-between text-lg font-semibold mb-4">
                            <span>–ò—Ç–æ–≥–æ:</span>
                            <span>{totalPrice()} ‚ÇΩ</span>
                        </div>

                        <Button
                            className="w-full"
                            size="lg"
                            onClick={handleOrder}
                            disabled={isFormInvalid}
                        >
                            –û—Ñ–æ—Ä–º–∏—Ç—å –∑–∞–∫–∞–∑
                        </Button>
                    </div>
                )}
            </DialogContent>
        </Dialog>
    )
}
 CartItemsList.tsx
'use client'

import { X } from 'lucide-react'
import { Button } from '@/components/ui/button'
import { useCartStore } from '@/lib/stores/cart-store'

export default function CartItemsList() {
    const { items, removeItem, updateQuantity } = useCartStore()

    if (items.length === 0) {
        return (
            <p className="text-muted-foreground text-center py-8">
                –ö–æ—Ä–∑–∏–Ω–∞ –ø—É—Å—Ç–∞
            </p>
        )
    }

    return (
        <div className="space-y-4">
            {items.map((item) => (
                <div key={item.id} className="flex items-center justify-between p-3 bg-card rounded-lg border">
                    <div className="flex-1 min-w-0">
                        <p className="font-medium text-base truncate">{item.name}</p>
                        <p className="text-sm text-muted-foreground">{item.price} ‚ÇΩ √ó {item.quantity}</p>
                    </div>

                    <div className="flex items-center gap-2 ml-4">
                        <div className="flex items-center gap-2 bg-muted rounded-md p-1">
                            <Button
                                variant="ghost"
                                size="sm"
                                className="h-8 w-8 p-0"
                                onClick={() => updateQuantity(item.id, item.quantity - 1)}
                            >
                                -
                            </Button>

                            <span className="w-8 text-center font-medium">{item.quantity}</span>

                            <Button
                                variant="ghost"
                                size="sm"
                                className="h-8 w-8 p-0"
                                onClick={() => updateQuantity(item.id, item.quantity + 1)}
                            >
                                +
                            </Button>
                        </div>

                        <Button
                            variant="ghost"
                            size="sm"
                            onClick={() => removeItem(item.id)}
                            className="h-8 w-8 p-0 text-destructive hover:text-destructive hover:bg-destructive/10"
                        >
                            <X className="h-4 w-4" />
                        </Button>
                    </div>
                </div>
            ))}
        </div>
    )
}
CartOrderForm.tsx
'use client'

import { Input } from '@/components/ui/input'
import { Label } from '@/components/ui/label'

interface CartOrderFormProps {
    orderType: string
    formData: {
        name: string
        phone: string
        address: string
        pickupTime: string
    }
    onInputChange: (e: React.ChangeEvent<HTMLInputElement>) => void
}

export default function CartOrderForm({
    orderType,
    formData,
    onInputChange
}: CartOrderFormProps) {
    return (
        <div className="space-y-4">
            <div className="space-y-2">
                <Label htmlFor="name" className="text-sm font-medium">–ò–º—è *</Label>
                <Input
                    id="name"
                    name="name"
                    placeholder="–í–∞—à–µ –∏–º—è"
                    value={formData.name}
                    onChange={onInputChange}
                    className="bg-background"
                />
            </div>

            <div className="space-y-2">
                <Label htmlFor="phone" className="text-sm font-medium">–¢–µ–ª–µ—Ñ–æ–Ω *</Label>
                <Input
                    id="phone"
                    name="phone"
                    placeholder="+7 (999) 123-45-67"
                    value={formData.phone}
                    onChange={onInputChange}
                    className="bg-background"
                />
            </div>

            {orderType === 'delivery' && (
                <div className="space-y-2">
                    <Label htmlFor="address" className="text-sm font-medium">–ê–¥—Ä–µ—Å –¥–æ—Å—Ç–∞–≤–∫–∏ *</Label>
                    <Input
                        id="address"
                        name="address"
                        placeholder="—É–ª. –ü—Ä–∏–º–µ—Ä–Ω–∞—è, –¥. 1, –∫–≤. 1"
                        value={formData.address}
                        onChange={onInputChange}
                        className="bg-background"
                    />
                </div>
            )}

            {orderType === 'pickup' && (
                <div className="space-y-2">
                    <Label htmlFor="pickupTime" className="text-sm font-medium">–í—Ä–µ–º—è –∑–∞–±—Ä–∞—Ç—å *</Label>
                    <Input
                        id="pickupTime"
                        name="pickupTime"
                        type="time"
                        value={formData.pickupTime}
                        onChange={onInputChange}
                        className="bg-background"
                    />
                </div>
            )}
        </div>
    )
}
CartSheet.tsx
'use client'

import { useState } from 'react'
import { Button } from '@/components/ui/button'
import {
    Sheet,
    SheetContent,
    SheetHeader,
    SheetTitle,
} from '@/components/ui/sheet'
import { useCartStore } from '@/lib/stores/cart-store'
import CartTabs from './CartTabs'
import CartOrderForm from './CartOrderForm'
import CartItemsList from './CartItemsList'

interface CartSheetProps {
    open: boolean
    onOpenChange: (open: boolean) => void
}

export default function CartSheet({ open, onOpenChange }: CartSheetProps) {
    const [orderType, setOrderType] = useState('delivery')
    const [formData, setFormData] = useState({
        name: '',
        phone: '',
        address: '',
        pickupTime: ''
    })

    const { items, totalPrice, clearCart } = useCartStore()

    const handleInputChange = (e: React.ChangeEvent<HTMLInputElement>) => {
        const { name, value } = e.target
        setFormData(prev => ({ ...prev, [name]: value }))
    }

    const handleOrder = () => {
        const order = {
            type: orderType,
            items,
            customer: formData,
            total: totalPrice()
        }
        console.log('–ó–∞–∫–∞–∑ —Å–æ–∑–¥–∞–Ω:', order)
        clearCart()
        onOpenChange(false)
        setFormData({ name: '', phone: '', address: '', pickupTime: '' })
    }

    const isFormInvalid = !formData.name || !formData.phone ||
        (orderType === 'delivery' ? !formData.address : !formData.pickupTime)

    return (
        <Sheet open={open} onOpenChange={onOpenChange}>
            <SheetContent
                side="right"
                className="w-full sm:max-w-md mx-auto h-screen max-h-screen flex flex-col"
                style={{
                    right: '50%',
                    transform: 'translateX(50%)',
                    maxWidth: '400px',
                    borderRadius: '0',
                    padding: '0'
                }}
            >
                <div className="flex flex-col h-full">
                    {/* –®–∞–ø–∫–∞ */}
                    <SheetHeader className="px-6 pt-6 pb-4 border-b bg-muted/30">
                        <SheetTitle className="text-2xl font-heading text-center">
                            –í–∞—à –∑–∞–∫–∞–∑
                        </SheetTitle>
                    </SheetHeader>

                    {/* –û—Å–Ω–æ–≤–Ω–æ–µ —Å–æ–¥–µ—Ä–∂–∏–º–æ–µ —Å –ø—Ä–æ–∫—Ä—É—Ç–∫–æ–π */}
                    <div className="flex-1 overflow-y-auto px-6 py-4 space-y-6">
                        {/* –¢–∞–±—ã –≤—ã–±–æ—Ä–∞ —Å–ø–æ—Å–æ–±–∞ –ø–æ–ª—É—á–µ–Ω–∏—è */}
                        <CartTabs value={orderType} onValueChange={setOrderType} />

                        {/* –§–æ—Ä–º–∞ –∑–∞–∫–∞–∑–∞ */}
                        <CartOrderForm
                            orderType={orderType}
                            formData={formData}
                            onInputChange={handleInputChange}
                        />

                        {/* –°–ø–∏—Å–æ–∫ —Ç–æ–≤–∞—Ä–æ–≤ */}
                        {items.length > 0 && (
                            <div className="border-t pt-4">
                                <h3 className="font-semibold mb-3 text-lg">–¢–æ–≤–∞—Ä—ã –≤ –∑–∞–∫–∞–∑–µ</h3>
                                <CartItemsList />
                            </div>
                        )}

                        {items.length === 0 && (
                            <div className="flex items-center justify-center h-40">
                                <p className="text-muted-foreground text-center text-lg">
                                    –ö–æ—Ä–∑–∏–Ω–∞ –ø—É—Å—Ç–∞
                                </p>
                            </div>
                        )}
                    </div>

                    {/* –ò—Ç–æ–≥ –∏ –∫–Ω–æ–ø–∫–∞ –∑–∞–∫–∞–∑–∞ */}
                    {items.length > 0 && (
                        <div className="border-t px-6 py-4 bg-muted/30">
                            <div className="flex justify-between text-lg font-semibold mb-4">
                                <span>–ò—Ç–æ–≥–æ:</span>
                                <span>{totalPrice()} ‚ÇΩ</span>
                            </div>

                            <Button
                                className="w-full"
                                size="lg"
                                onClick={handleOrder}
                                disabled={isFormInvalid}
                            >
                                –û—Ñ–æ—Ä–º–∏—Ç—å –∑–∞–∫–∞–∑
                            </Button>
                        </div>
                    )}
                </div>
            </SheetContent>
        </Sheet>
    )
}
CartTabs.tsx
'use client'

import {
    Tabs,
    TabsList,
    TabsTrigger,
} from '@/components/ui/tabs'

interface CartTabsProps {
    value: string
    onValueChange: (value: string) => void
}

export default function CartTabs({ value, onValueChange }: CartTabsProps) {
    return (
        <Tabs value={value} onValueChange={onValueChange} className="w-full">
            <TabsList className="grid w-full grid-cols-2 bg-muted/50 p-1 rounded-lg">
                <TabsTrigger
                    value="delivery"
                    className="rounded-md data-[state=active]:bg-background data-[state=active]:shadow-sm"
                >
                    –î–æ—Å—Ç–∞–≤–∫–∞
                </TabsTrigger>
                <TabsTrigger
                    value="pickup"
                    className="rounded-md data-[state=active]:bg-background data-[state=active]:shadow-sm"
                >
                    –°–∞–º–æ–≤—ã–≤–æ–∑
                </TabsTrigger>
            </TabsList>
        </Tabs>
    )
}
home/
DeliveryInfo.tsx
export default function DeliveryInfo() {
    return (
        <section className="mb-12 text-center">
            <div className="bg-muted/50 rounded-2xl p-6 md:p-8 max-w-4xl mx-auto">
                <h3 className="text-2xl font-heading font-bold mb-4">–ë—ã—Å—Ç—Ä–∞—è –¥–æ—Å—Ç–∞–≤–∫–∞</h3>
                <p className="text-muted-foreground mb-6">
                    –ó–∞–∫–∞–∂–∏—Ç–µ –æ—Ç 1000‚ÇΩ –∏ –ø–æ–ª—É—á–∏—Ç–µ –±–µ—Å–ø–ª–∞—Ç–Ω—É—é –¥–æ—Å—Ç–∞–≤–∫—É –ø–æ –≥–æ—Ä–æ–¥—É
                </p>
                <div className="flex flex-col sm:flex-row justify-center gap-4 sm:gap-8 text-sm">
                    <div className="flex items-center gap-2 justify-center">
                        <div className="w-2 h-2 bg-primary rounded-full"></div>
                        <span>–î–æ—Å—Ç–∞–≤–∫–∞ 30-60 –º–∏–Ω—É—Ç</span>
                    </div>
                    <div className="flex items-center gap-2 justify-center">
                        <div className="w-2 h-2 bg-primary rounded-full"></div>
                        <span>–°–∞–º–æ–≤—ã–≤–æ–∑ –∏–∑ –∫–∞—Ñ–µ</span>
                    </div>
                </div>
            </div>
        </section>
    )
}
 HeroSection.tsx
// src/components/home/HeroSection.tsx
'use client'

import Image from 'next/image'
import { Button } from '@/components/ui/button'

interface HeroSectionProps {
    onMenuClick: () => void // –î–æ–±–∞–≤–ª—è–µ–º –ø—Ä–æ–ø—Å
}


export default function HeroSection({ onMenuClick }: HeroSectionProps) {
    return (
        <section className="relative min-h-[600px] md:min-h-[800px] flex items-center justify-center overflow-hidden">
            <div className="absolute inset-0 z-0">
                <Image
                    src="/baner/banner.logo.jpg"
                    alt="–£—é—Ç–Ω–∞—è –∫–æ—Ñ–µ–π–Ω—è"
                    fill
                    className="object-cover scale-125 transform"
                    priority
                    quality={90}
                    style={{ transform: 'scale(1.3) translateY(-5%)' }}
                />
            </div>

            {/* –ó–∞—Ç–µ–º–Ω–µ–Ω–∏–µ —Ç–æ–ª—å–∫–æ –¥–ª—è —Ç–µ–∫—Å—Ç–∞ */}
            <div className="absolute inset-0 z-1 bg-black/10 dark:bg-black/20" />

            {/* –ö–æ–Ω—Ç–µ–Ω—Ç –ø–æ–≤–µ—Ä—Ö –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è */}
            <div className="container relative z-10 px-4">
                <div className="max-w-2xl mx-auto text-center space-y-6 animate-fade-in-up">
                    {/* –ó–∞–≥–æ–ª–æ–≤–æ–∫ */}
                    <h1 className="text-4xl md:text-5xl lg:text-6xl font-heading font-bold text-white drop-shadow-lg">
                        –ö–∞—Ñ–µ ¬´–£–≥–æ–ª–æ–∫ –í–∫—É—Å–∞¬ª
                    </h1>

                    {/* –û–ø–∏—Å–∞–Ω–∏–µ */}
                    <p className="text-lg md:text-xl text-white/90 leading-relaxed drop-shadow-md">
                        –í–∫—É—Å–Ω–∞—è –ø–∏—Ü—Ü–∞, —Å–≤–µ–∂–∏–µ —Ä–æ–ª–ª—ã –∏ —Å–æ—á–Ω—ã–µ –±—É—Ä–≥–µ—Ä—ã —Å –¥–æ—Å—Ç–∞–≤–∫–æ–π.
                        –ö–∞–∂–¥–æ–µ –±–ª—é–¥–æ ‚Äî —ç—Ç–æ –∏—Å–∫—É—Å—Å—Ç–≤–æ, –∫–∞–∂–¥–æ–µ –±–ª—é–¥–æ ‚Äî –Ω–∞—Å–ª–∞–∂–¥–µ–Ω–∏–µ.
                    </p>

                    {/* –ö–Ω–æ–ø–∫–∞ CTA - —Ç–µ–ø–µ—Ä—å –≤—ã–∑—ã–≤–∞–µ—Ç onMenuClick */}
                    <div className="pt-4">
                        <Button
                            size="lg"
                            onClick={onMenuClick} // –í—ã–∑—ã–≤–∞–µ–º –ø–µ—Ä–µ–¥–∞–Ω–Ω—É—é —Ñ—É–Ω–∫—Ü–∏—é
                            className="text-lg px-8 py-6 
                         bg-white text-foreground 
                         dark:bg-primary dark:text-primary-foreground
                         border-2 border-transparent 
                         hover:border-primary 
                         transition-all
                         hover:bg-white/90 
                         dark:hover:bg-primary/90"
                        >
                            –°–º–æ—Ç—Ä–µ—Ç—å –º–µ–Ω—é
                        </Button>
                    </div>

                    {/* –î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω–∞—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è */}
                    <div className="flex flex-col sm:flex-row justify-center gap-4 sm:gap-6 text-sm text-white/80 pt-4">
                        <div className="flex items-center gap-2 justify-center">
                            <div className="w-2 h-2 bg-white rounded-full" />
                            <span>–°–≤–µ–∂–µ–æ–±–∂–∞—Ä–µ–Ω–Ω—ã–µ –∑–µ—Ä–Ω–∞</span>
                        </div>
                        <div className="flex items-center gap-2 justify-center">
                            <div className="w-2 h-2 bg-white rounded-full" />
                            <span>–£—é—Ç–Ω–∞—è –∞—Ç–º–æ—Å—Ñ–µ—Ä–∞</span>
                        </div>
                        <div className="flex items-center gap-2 justify-center">
                            <div className="w-2 h-2 bg-white rounded-full" />
                            <span>–ê–≤—Ç–æ—Ä—Å–∫–∏–µ –¥–µ—Å–µ—Ä—Ç—ã</span>
                        </div>
                    </div>
                </div>
            </div>

            {/* –î–µ–∫–æ—Ä–∞—Ç–∏–≤–Ω—ã–µ —ç–ª–µ–º–µ–Ω—Ç—ã */}
            <div className="absolute bottom-6 left-1/2 transform -translate-x-1/2 z-10">
                <div className="w-6 h-10 border-2 border-white rounded-full flex justify-center">
                    <div className="w-1 h-3 bg-white rounded-full mt-2 animate-bounce" />
                </div>
            </div>
        </section>
    )
}
index.ts
// src/components/home/index.ts
export { default as HeroSection } from "./HeroSection";
export { default as DeliveryInfo } from "./DeliveryInfo";

 layout/
 Header.tsx
'use client'

import { useState, useEffect } from 'react'
import Link from 'next/link'
import Image from 'next/image'
import { Button } from '@/components/ui/button'
import { ShoppingCart, Sun, Moon, Search } from 'lucide-react'
import { useTheme } from 'next-themes'
import { useCartStore } from '@/lib/stores/cart-store'
import CartDialog from '@/components/cart/CartDialog' // –ü—Ä–∞–≤–∏–ª—å–Ω—ã–π –∏–º–ø–æ—Ä—Ç
import SearchDialog from '@/components/search/SearchDialog'
import { useSearch } from '@/lib/contexts/search-context'

export default function Header() {
    const { theme, setTheme } = useTheme()
    const totalItems = useCartStore((state) => state.totalItems())
    const [isCartOpen, setIsCartOpen] = useState(false)
    const [isSearchOpen, setIsSearchOpen] = useState(false)
    const { setSelectedProduct } = useSearch()
    const [mounted, setMounted] = useState(false)

    useEffect(() => {
        setMounted(true)
    }, [])

    const handleSearchSelect = (product: any) => {
        setSelectedProduct(product)
        setIsSearchOpen(false)
    }

    return (
        <>
            <header className="border-b bg-background/95 backdrop-blur supports-[backdrop-filter]:bg-background/60 sticky top-0 z-50">
                <div className="container mx-auto px-4 py-4 flex justify-between items-center">
                    <Link href="/" className="flex items-center gap-3">
                        <div className="relative w-10 h-10">
                            <Image
                                src="/logo.png"
                                alt="–ö–∞—Ñ–µ –£–≥–æ–ª–æ–∫ –í–∫—É—Å–∞"
                                fill
                                className="object-contain"
                            />
                        </div>
                        <span className="text-xl font-bold text-primary hidden sm:block">
                            –ö–∞—Ñ–µ ¬´–£–≥–æ–ª–æ–∫ –í–∫—É—Å–∞¬ª
                        </span>
                    </Link>

                    <nav className="flex items-center gap-2 sm:gap-4">
                        <Link href="/"><Button variant="ghost" size="sm">–ú–µ–Ω—é</Button></Link>
                        <Link href="/about"><Button variant="ghost" size="sm">–û –Ω–∞—Å</Button></Link>
                        <Link href="/contact"><Button variant="ghost" size="sm">–ö–æ–Ω—Ç–∞–∫—Ç—ã</Button></Link>
                    </nav>

                    <div className="flex items-center gap-3">
                        <Button
                            variant="outline"
                            size="icon"
                            onClick={() => setIsSearchOpen(true)}
                            className="h-9 w-9"
                        >
                            <Search className="h-4 w-4" />
                        </Button>

                        <Button
                            variant="outline"
                            size="icon"
                            onClick={() => setTheme(theme === 'dark' ? 'light' : 'dark')}
                            className="h-9 w-9"
                        >
                            <Sun className="h-4 w-4 rotate-0 scale-100 transition-all dark:-rotate-90 dark:scale-0" />
                            <Moon className="absolute h-4 w-4 rotate-90 scale-0 transition-all dark:rotate-0 dark:scale-100" />
                            <span className="sr-only">–ü–µ—Ä–µ–∫–ª—é—á–∏—Ç—å —Ç–µ–º—É</span>
                        </Button>

                        <Button
                            variant="outline"
                            size="icon"
                            className="h-9 w-9 relative"
                            onClick={() => setIsCartOpen(true)}
                        >
                            <ShoppingCart className="h-4 w-4" />
                            {mounted && totalItems > 0 && (
                                <span className="absolute -top-2 -right-2 bg-primary text-primary-foreground text-xs rounded-full h-5 w-5 flex items-center justify-center">
                                    {totalItems}
                                </span>
                            )}
                        </Button>
                    </div>
                </div>
            </header>

            {mounted && (
                <>
                    <CartDialog open={isCartOpen} onOpenChange={setIsCartOpen} /> {/* –ò—Å–ø–æ–ª—å–∑—É–µ–º CartDialog */}
                    <SearchDialog
                        open={isSearchOpen}
                        onOpenChange={setIsSearchOpen}
                        onProductSelect={handleSearchSelect}
                    />
                </>
            )}
        </>
    )
}
 products/
CategoryFilter.tsx
// src/components/products/CategoryFilter.tsx
'use client'

interface CategoryFilterProps {
    selectedCategory: string
    onCategoryChange: (category: string) => void
}

const categories = [
    { id: 'all', name: '–í—Å–µ' },
    { id: 'pizza', name: '–ü–∏—Ü—Ü–∞' },
    { id: 'burgers', name: '–ë—É—Ä–≥–µ—Ä—ã' },
    { id: 'lavash', name: '–õ–∞–≤–∞—à–∏' },
    { id: 'hotdogs', name: '–•–æ—Ç-–î–æ–≥–∏' },
    { id: 'salads', name: '–°–∞–ª–∞—Ç—ã' },
    { id: 'snacks', name: '–ó–∞–∫—É—Å–∫–∏' },
    { id: 'soups', name: '–°—É–ø—ã' },
    { id: 'rolls', name: '–†–æ–ª–ª—ã' },
    { id: 'wok', name: 'WOK' },
    { id: 'desserts', name: '–î–µ—Å–µ—Ä—Ç—ã' },
    { id: 'drinks', name: '–ù–∞–ø–∏—Ç–∫–∏' },
    { id: 'sauces', name: '–°–æ—É—Å—ã' },
    { id: 'sides', name: '–ì–∞—Ä–Ω–∏—Ä—ã' },
    { id: 'extras', name: '–î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω–æ' },
]

export default function CategoryFilter({ selectedCategory, onCategoryChange }: CategoryFilterProps) {
    return (
        <div className="flex justify-center gap-4 mb-12">
            {categories.map(category => (
                <button
                    key={category.id}
                    onClick={() => onCategoryChange(category.id)}
                    className={`px-4 py-2 rounded-full text-sm transition-colors ${selectedCategory === category.id
                            ? 'bg-primary text-primary-foreground'
                            : 'bg-muted text-muted-foreground hover:bg-primary hover:text-primary-foreground'
                        }`}
                >
                    {category.name}
                </button>
            ))}
        </div>
    )
}
index.ts
// src/components/products/index.ts
export { default as ProductCard } from "./ProductCard";
export { default as ProductModal } from "./ProductModal";
export { default as ProductGrid } from "./ProductGrid";
export { default as CategoryFilter } from "./CategoryFilter";

 ProductCard.tsx
'use client'

import { Card, CardContent, CardDescription, CardHeader, CardTitle } from '@/components/ui/card'
import { Button } from '@/components/ui/button'
import { Coffee } from 'lucide-react'
import { useState } from 'react'
import Image from 'next/image' // –ò–º–ø–æ—Ä—Ç–∏—Ä—É–µ–º –∫–æ–º–ø–æ–Ω–µ–Ω—Ç Image

interface Product {
    id: number
    name: string
    price: number
    description: string
    image?: string
    category: string
}

interface ProductCardProps {
    product: Product
    onSelect: (product: Product) => void
}

export default function ProductCard({ product, onSelect }: ProductCardProps) {
    const [imageLoaded, setImageLoaded] = useState(false)
    const [imageError, setImageError] = useState(false) // –°–æ—Å—Ç–æ—è–Ω–∏–µ –¥–ª—è –æ—à–∏–±–∫–∏ –∑–∞–≥—Ä—É–∑–∫–∏

    return (
        <Card
            className="cursor-pointer transition-all hover:shadow-lg hover:scale-105 h-full flex flex-col"
            onClick={() => onSelect(product)}
        >
            <CardHeader className="p-4 flex-1">
                <div className="w-full h-48 bg-muted rounded-lg mb-4 flex items-center justify-center relative">
                    {/* –°–∫–µ–ª–µ—Ç–æ–Ω-–∑–∞–≥–ª—É—à–∫–∞ */}
                    {!imageLoaded && !imageError && (
                        <div className="absolute inset-0 bg-muted-foreground/20 animate-pulse rounded-lg"></div>
                    )}

                    {/* –ï—Å–ª–∏ –µ—Å—Ç—å —Å—Å—ã–ª–∫–∞ –Ω–∞ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ –∏ –Ω–µ –±—ã–ª–æ –æ—à–∏–±–∫–∏ - –ø–æ–∫–∞–∑—ã–≤–∞–µ–º Image */}
                    {product.image && !imageError ? (
                        <Image
                            src={product.image}
                            alt={product.name} // –í—Å–µ–≥–¥–∞ –∑–∞–ø–æ–ª–Ω—è–π—Ç–µ alt!
                            fill // –ó–∞–ø–æ–ª–Ω—è–µ—Ç –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä
                            className="object-cover rounded-lg"
                            onLoad={() => setImageLoaded(true)}
                            onError={() => setImageError(true)} // –ï—Å–ª–∏ –∫–∞—Ä—Ç–∏–Ω–∫–∞ –Ω–µ –∑–∞–≥—Ä—É–∑–∏–ª–∞—Å—å
                        />
                    ) : (
                        // –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –∏–∫–æ–Ω–∫—É, –µ—Å–ª–∏ –Ω–µ—Ç –∫–∞—Ä—Ç–∏–Ω–∫–∏ –∏–ª–∏ –ø—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞
                        <Coffee className="h-16 w-16 text-muted-foreground" />
                    )}
                </div>
                <CardTitle className="text-lg">{product.name}</CardTitle>
                <CardDescription className="line-clamp-2 mt-2">
                    {product.description}
                </CardDescription>
            </CardHeader>
            <CardContent className="p-4 pt-0">
                <div className="flex justify-between items-center">
                    <span className="text-2xl font-bold text-primary">
                        {product.price} ‚ÇΩ
                    </span>
                    <Button onClick={(e) => {
                        e.stopPropagation()
                        onSelect(product)
                    }}>
                        –í—ã–±—Ä–∞—Ç—å
                    </Button>
                </div>
            </CardContent>
        </Card>
    )
}
 ProductGrid.tsx
// src/components/products/ProductGrid.tsx
'use client'

import { Product } from '@/lib/data/index'
import ProductCard from './ProductCard'

interface ProductGridProps {
    products: Product[]
    onProductSelect: (product: Product) => void
}

export default function ProductGrid({ products, onProductSelect }: ProductGridProps) {
    return (
        <div className="grid md:grid-cols-2 lg:grid-cols-3 xl:grid-cols-4 gap-6">
            {products.map(product => (
                <ProductCard
                    key={product.id}
                    product={product}
                    onSelect={onProductSelect}
                />
            ))}
        </div>
    )
}
ProductModal.tsx
// src/components/products/ProductModal.tsx
'use client'

import { Dialog, DialogContent, DialogDescription, DialogHeader, DialogTitle } from '@/components/ui/dialog'
import { Button } from '@/components/ui/button'
import { Coffee, X } from 'lucide-react'

interface Product {
    id: number
    name: string
    price: number
    description: string
    image?: string
    category: string
}

interface ProductModalProps {
    product: Product | null
    isOpen: boolean
    onClose: () => void
    onAddToCart: (product: Product) => void
}

export default function ProductModal({ product, isOpen, onClose, onAddToCart }: ProductModalProps) {
    if (!product) return null

    return (
        <Dialog open={isOpen} onOpenChange={onClose}>
            <DialogContent className="sm:max-w-md">
                <DialogHeader>
                    <DialogTitle className="text-2xl">{product.name}</DialogTitle>
                    <DialogDescription>{product.category}</DialogDescription>
                </DialogHeader>

                <div className="w-full h-64 bg-muted rounded-lg mb-4 flex items-center justify-center">
                    {product.image ? (
                        <img
                            src={product.image}
                            alt={product.name}
                            className="w-full h-full object-cover rounded-lg"
                        />
                    ) : (
                        <Coffee className="h-20 w-20 text-muted-foreground" />
                    )}
                </div>

                <p className="text-muted-foreground mb-4">{product.description}</p>

                <div className="flex items-center justify-between">
                    <span className="text-3xl font-bold text-primary">
                        {product.price} ‚ÇΩ
                    </span>
                    <Button
                        onClick={() => {
                            onAddToCart(product)
                            onClose()
                        }}
                        size="lg"
                    >
                        –î–æ–±–∞–≤–∏—Ç—å –≤ –∫–æ—Ä–∑–∏–Ω—É
                    </Button>
                </div>
            </DialogContent>
        </Dialog>
    )
}
search/
 SearchDialog.tsx           
'use client'

import { useState, useEffect } from 'react'
import { Search, X } from 'lucide-react'
import { Dialog, DialogContent, DialogHeader, DialogTitle } from '@/components/ui/dialog'
import { Input } from '@/components/ui/input'
import { Product } from '@/lib/data'
import { products } from '@/lib/data'
import { Button } from '@/components/ui/button'

interface SearchDialogProps {
    open: boolean
    onOpenChange: (open: boolean) => void
    onProductSelect: (product: Product) => void
}

export default function SearchDialog({ open, onOpenChange, onProductSelect }: SearchDialogProps) {
    const [searchQuery, setSearchQuery] = useState('')
    const [filteredProducts, setFilteredProducts] = useState<Product[]>([])

    useEffect(() => {
        if (searchQuery.trim() === '') {
            setFilteredProducts([])
            return
        }

        const query = searchQuery.toLowerCase().trim()
        const results = products.filter(product =>
            product.name.toLowerCase().includes(query) ||
            product.description.toLowerCase().includes(query) ||
            product.category.toLowerCase().includes(query)
        )
        setFilteredProducts(results.slice(0, 10)) // –û–≥—Ä–∞–Ω–∏—á–∏–≤–∞–µ–º —Ä–µ–∑—É–ª—å—Ç–∞—Ç—ã
    }, [searchQuery])

    const handleProductClick = (product: Product) => {
        onProductSelect(product)
        onOpenChange(false)
        setSearchQuery('')
    }

    return (
        <Dialog open={open} onOpenChange={onOpenChange}>
            <DialogContent className="sm:max-w-md">
                <DialogHeader>
                    <DialogTitle>–ü–æ–∏—Å–∫ —Ç–æ–≤–∞—Ä–æ–≤</DialogTitle>
                </DialogHeader>

                <div className="relative">
                    <Search className="absolute left-3 top-3 h-4 w-4 text-muted-foreground" />
                    <Input
                        placeholder="–ù–∞–π—Ç–∏ –ø–∏—Ü—Ü—É, —Ä–æ–ª–ª—ã, –Ω–∞–ø–∏—Ç–∫–∏..."
                        className="pl-10 pr-10"
                        value={searchQuery}
                        onChange={(e) => setSearchQuery(e.target.value)}
                        autoFocus
                    />
                    {searchQuery && (
                        <X
                            className="absolute right-3 top-3 h-4 w-4 cursor-pointer text-muted-foreground"
                            onClick={() => setSearchQuery('')}
                        />
                    )}
                </div>

                <div className="max-h-60 overflow-y-auto">
                    {searchQuery && filteredProducts.length === 0 && (
                        <p className="p-4 text-center text-muted-foreground">–ù–∏—á–µ–≥–æ –Ω–µ –Ω–∞–π–¥–µ–Ω–æ</p>
                    )}

                    {filteredProducts.map((product) => (
                        <div
                            key={product.id}
                            className="flex items-center justify-between p-3 hover:bg-accent cursor-pointer rounded-lg"
                            onClick={() => handleProductClick(product)}
                        >
                            <div className="flex-1">
                                <p className="font-medium">{product.name}</p>
                                <p className="text-sm text-muted-foreground">{product.category}</p>
                            </div>
                            <div className="text-right">
                                <p className="font-semibold">{product.price} ‚ÇΩ</p>
                            </div>
                        </div>
                    ))}
                </div>
            </DialogContent>
        </Dialog>
    )
}
 ui/
button.tsx
import * as React from "react"
import { Slot } from "@radix-ui/react-slot"
import { cva, type VariantProps } from "class-variance-authority"

import { cn } from "@/lib/utils"

const buttonVariants = cva(
  "inline-flex items-center justify-center gap-2 whitespace-nowrap rounded-md text-sm font-medium transition-all disabled:pointer-events-none disabled:opacity-50 [&_svg]:pointer-events-none [&_svg:not([class*='size-'])]:size-4 shrink-0 [&_svg]:shrink-0 outline-none focus-visible:border-ring focus-visible:ring-ring/50 focus-visible:ring-[3px] aria-invalid:ring-destructive/20 dark:aria-invalid:ring-destructive/40 aria-invalid:border-destructive",
  {
    variants: {
      variant: {
        default:
          "bg-primary text-primary-foreground shadow-xs hover:bg-primary/90",
        destructive:
          "bg-destructive text-white shadow-xs hover:bg-destructive/90 focus-visible:ring-destructive/20 dark:focus-visible:ring-destructive/40 dark:bg-destructive/60",
        outline:
          "border bg-background shadow-xs hover:bg-accent hover:text-accent-foreground dark:bg-input/30 dark:border-input dark:hover:bg-input/50",
        secondary:
          "bg-secondary text-secondary-foreground shadow-xs hover:bg-secondary/80",
        ghost:
          "hover:bg-accent hover:text-accent-foreground dark:hover:bg-accent/50",
        link: "text-primary underline-offset-4 hover:underline",
      },
      size: {
        default: "h-9 px-4 py-2 has-[>svg]:px-3",
        sm: "h-8 rounded-md gap-1.5 px-3 has-[>svg]:px-2.5",
        lg: "h-10 rounded-md px-6 has-[>svg]:px-4",
        icon: "size-9",
      },
    },
    defaultVariants: {
      variant: "default",
      size: "default",
    },
  }
)

function Button({
  className,
  variant,
  size,
  asChild = false,
  ...props
}: React.ComponentProps<"button"> &
  VariantProps<typeof buttonVariants> & {
    asChild?: boolean
  }) {
  const Comp = asChild ? Slot : "button"

  return (
    <Comp
      data-slot="button"
      className={cn(buttonVariants({ variant, size, className }))}
      {...props}
    />
  )
}

export { Button, buttonVariants }

card.tsx
import * as React from "react"

import { cn } from "@/lib/utils"

function Card({ className, ...props }: React.ComponentProps<"div">) {
  return (
    <div
      data-slot="card"
      className={cn(
        "bg-card text-card-foreground flex flex-col gap-6 rounded-xl border py-6 shadow-sm",
        className
      )}
      {...props}
    />
  )
}

function CardHeader({ className, ...props }: React.ComponentProps<"div">) {
  return (
    <div
      data-slot="card-header"
      className={cn(
        "@container/card-header grid auto-rows-min grid-rows-[auto_auto] items-start gap-1.5 px-6 has-data-[slot=card-action]:grid-cols-[1fr_auto] [.border-b]:pb-6",
        className
      )}
      {...props}
    />
  )
}

function CardTitle({ className, ...props }: React.ComponentProps<"div">) {
  return (
    <div
      data-slot="card-title"
      className={cn("leading-none font-semibold", className)}
      {...props}
    />
  )
}

function CardDescription({ className, ...props }: React.ComponentProps<"div">) {
  return (
    <div
      data-slot="card-description"
      className={cn("text-muted-foreground text-sm", className)}
      {...props}
    />
  )
}

function CardAction({ className, ...props }: React.ComponentProps<"div">) {
  return (
    <div
      data-slot="card-action"
      className={cn(
        "col-start-2 row-span-2 row-start-1 self-start justify-self-end",
        className
      )}
      {...props}
    />
  )
}

function CardContent({ className, ...props }: React.ComponentProps<"div">) {
  return (
    <div
      data-slot="card-content"
      className={cn("px-6", className)}
      {...props}
    />
  )
}

function CardFooter({ className, ...props }: React.ComponentProps<"div">) {
  return (
    <div
      data-slot="card-footer"
      className={cn("flex items-center px-6 [.border-t]:pt-6", className)}
      {...props}
    />
  )
}

export {
  Card,
  CardHeader,
  CardFooter,
  CardTitle,
  CardAction,
  CardDescription,
  CardContent,
}

dialog.tsx
"use client"

import * as React from "react"
import * as DialogPrimitive from "@radix-ui/react-dialog"
import { XIcon } from "lucide-react"

import { cn } from "@/lib/utils"

function Dialog({
  ...props
}: React.ComponentProps<typeof DialogPrimitive.Root>) {
  return <DialogPrimitive.Root data-slot="dialog" {...props} />
}

function DialogTrigger({
  ...props
}: React.ComponentProps<typeof DialogPrimitive.Trigger>) {
  return <DialogPrimitive.Trigger data-slot="dialog-trigger" {...props} />
}

function DialogPortal({
  ...props
}: React.ComponentProps<typeof DialogPrimitive.Portal>) {
  return <DialogPrimitive.Portal data-slot="dialog-portal" {...props} />
}

function DialogClose({
  ...props
}: React.ComponentProps<typeof DialogPrimitive.Close>) {
  return <DialogPrimitive.Close data-slot="dialog-close" {...props} />
}

function DialogOverlay({
  className,
  ...props
}: React.ComponentProps<typeof DialogPrimitive.Overlay>) {
  return (
    <DialogPrimitive.Overlay
      data-slot="dialog-overlay"
      className={cn(
        "data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0 fixed inset-0 z-50 bg-black/50",
        className
      )}
      {...props}
    />
  )
}

function DialogContent({
  className,
  children,
  showCloseButton = true,
  ...props
}: React.ComponentProps<typeof DialogPrimitive.Content> & {
  showCloseButton?: boolean
}) {
  return (
    <DialogPortal data-slot="dialog-portal">
      <DialogOverlay />
      <DialogPrimitive.Content
        data-slot="dialog-content"
        className={cn(
          "bg-background data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0 data-[state=closed]:zoom-out-95 data-[state=open]:zoom-in-95 fixed top-[50%] left-[50%] z-50 grid w-full max-w-[calc(100%-2rem)] translate-x-[-50%] translate-y-[-50%] gap-4 rounded-lg border p-6 shadow-lg duration-200 sm:max-w-lg",
          className
        )}
        {...props}
      >
        {children}
        {showCloseButton && (
          <DialogPrimitive.Close
            data-slot="dialog-close"
            className="ring-offset-background focus:ring-ring data-[state=open]:bg-accent data-[state=open]:text-muted-foreground absolute top-4 right-4 rounded-xs opacity-70 transition-opacity hover:opacity-100 focus:ring-2 focus:ring-offset-2 focus:outline-hidden disabled:pointer-events-none [&_svg]:pointer-events-none [&_svg]:shrink-0 [&_svg:not([class*='size-'])]:size-4"
          >
            <XIcon />
            <span className="sr-only">Close</span>
          </DialogPrimitive.Close>
        )}
      </DialogPrimitive.Content>
    </DialogPortal>
  )
}

function DialogHeader({ className, ...props }: React.ComponentProps<"div">) {
  return (
    <div
      data-slot="dialog-header"
      className={cn("flex flex-col gap-2 text-center sm:text-left", className)}
      {...props}
    />
  )
}

function DialogFooter({ className, ...props }: React.ComponentProps<"div">) {
  return (
    <div
      data-slot="dialog-footer"
      className={cn(
        "flex flex-col-reverse gap-2 sm:flex-row sm:justify-end",
        className
      )}
      {...props}
    />
  )
}

function DialogTitle({
  className,
  ...props
}: React.ComponentProps<typeof DialogPrimitive.Title>) {
  return (
    <DialogPrimitive.Title
      data-slot="dialog-title"
      className={cn("text-lg leading-none font-semibold", className)}
      {...props}
    />
  )
}

function DialogDescription({
  className,
  ...props
}: React.ComponentProps<typeof DialogPrimitive.Description>) {
  return (
    <DialogPrimitive.Description
      data-slot="dialog-description"
      className={cn("text-muted-foreground text-sm", className)}
      {...props}
    />
  )
}

export {
  Dialog,
  DialogClose,
  DialogContent,
  DialogDescription,
  DialogFooter,
  DialogHeader,
  DialogOverlay,
  DialogPortal,
  DialogTitle,
  DialogTrigger,
}

input.tsx
import * as React from "react"

import { cn } from "@/lib/utils"

function Input({ className, type, ...props }: React.ComponentProps<"input">) {
  return (
    <input
      type={type}
      data-slot="input"
      className={cn(
        "file:text-foreground placeholder:text-muted-foreground selection:bg-primary selection:text-primary-foreground dark:bg-input/30 border-input flex h-9 w-full min-w-0 rounded-md border bg-transparent px-3 py-1 text-base shadow-xs transition-[color,box-shadow] outline-none file:inline-flex file:h-7 file:border-0 file:bg-transparent file:text-sm file:font-medium disabled:pointer-events-none disabled:cursor-not-allowed disabled:opacity-50 md:text-sm",
        "focus-visible:border-ring focus-visible:ring-ring/50 focus-visible:ring-[3px]",
        "aria-invalid:ring-destructive/20 dark:aria-invalid:ring-destructive/40 aria-invalid:border-destructive",
        className
      )}
      {...props}
    />
  )
}

export { Input }

label.tsx
"use client"

import * as React from "react"
import * as LabelPrimitive from "@radix-ui/react-label"

import { cn } from "@/lib/utils"

function Label({
  className,
  ...props
}: React.ComponentProps<typeof LabelPrimitive.Root>) {
  return (
    <LabelPrimitive.Root
      data-slot="label"
      className={cn(
        "flex items-center gap-2 text-sm leading-none font-medium select-none group-data-[disabled=true]:pointer-events-none group-data-[disabled=true]:opacity-50 peer-disabled:cursor-not-allowed peer-disabled:opacity-50",
        className
      )}
      {...props}
    />
  )
}

export { Label }

radio-group.tsx
"use client"

import * as React from "react"
import * as RadioGroupPrimitive from "@radix-ui/react-radio-group"
import { CircleIcon } from "lucide-react"

import { cn } from "@/lib/utils"

function RadioGroup({
  className,
  ...props
}: React.ComponentProps<typeof RadioGroupPrimitive.Root>) {
  return (
    <RadioGroupPrimitive.Root
      data-slot="radio-group"
      className={cn("grid gap-3", className)}
      {...props}
    />
  )
}

function RadioGroupItem({
  className,
  ...props
}: React.ComponentProps<typeof RadioGroupPrimitive.Item>) {
  return (
    <RadioGroupPrimitive.Item
      data-slot="radio-group-item"
      className={cn(
        "border-input text-primary focus-visible:border-ring focus-visible:ring-ring/50 aria-invalid:ring-destructive/20 dark:aria-invalid:ring-destructive/40 aria-invalid:border-destructive dark:bg-input/30 aspect-square size-4 shrink-0 rounded-full border shadow-xs transition-[color,box-shadow] outline-none focus-visible:ring-[3px] disabled:cursor-not-allowed disabled:opacity-50",
        className
      )}
      {...props}
    >
      <RadioGroupPrimitive.Indicator
        data-slot="radio-group-indicator"
        className="relative flex items-center justify-center"
      >
        <CircleIcon className="fill-primary absolute top-1/2 left-1/2 size-2 -translate-x-1/2 -translate-y-1/2" />
      </RadioGroupPrimitive.Indicator>
    </RadioGroupPrimitive.Item>
  )
}

export { RadioGroup, RadioGroupItem }

section-card.tsx
import { cn } from '@/lib/utils'

interface SectionCardProps {
    children: React.ReactNode
    className?: string
}

export default function SectionCard({ children, className }: SectionCardProps) {
    return (
        <div className={cn(
            "max-w-4xl mx-auto bg-card text-card-foreground p-8 rounded-lg shadow-md",
            className
        )}>
            {children}
        </div>
    )
}
sheet.tsx
"use client"

import * as React from "react"
import * as SheetPrimitive from "@radix-ui/react-dialog"
import { XIcon } from "lucide-react"

import { cn } from "@/lib/utils"

function Sheet({ ...props }: React.ComponentProps<typeof SheetPrimitive.Root>) {
  return <SheetPrimitive.Root data-slot="sheet" {...props} />
}

function SheetTrigger({
  ...props
}: React.ComponentProps<typeof SheetPrimitive.Trigger>) {
  return <SheetPrimitive.Trigger data-slot="sheet-trigger" {...props} />
}

function SheetClose({
  ...props
}: React.ComponentProps<typeof SheetPrimitive.Close>) {
  return <SheetPrimitive.Close data-slot="sheet-close" {...props} />
}

function SheetPortal({
  ...props
}: React.ComponentProps<typeof SheetPrimitive.Portal>) {
  return <SheetPrimitive.Portal data-slot="sheet-portal" {...props} />
}

function SheetOverlay({
  className,
  ...props
}: React.ComponentProps<typeof SheetPrimitive.Overlay>) {
  return (
    <SheetPrimitive.Overlay
      data-slot="sheet-overlay"
      className={cn(
        "data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0 fixed inset-0 z-50 bg-black/50",
        className
      )}
      {...props}
    />
  )
}

function SheetContent({
  className,
  children,
  side = "right",
  ...props
}: React.ComponentProps<typeof SheetPrimitive.Content> & {
  side?: "top" | "right" | "bottom" | "left"
}) {
  return (
    <SheetPortal>
      <SheetOverlay />
      <SheetPrimitive.Content
        data-slot="sheet-content"
        className={cn(
          "bg-background data-[state=open]:animate-in data-[state=closed]:animate-out fixed z-50 flex flex-col gap-4 shadow-lg transition ease-in-out data-[state=closed]:duration-300 data-[state=open]:duration-500",
          side === "right" &&
            "data-[state=closed]:slide-out-to-right data-[state=open]:slide-in-from-right inset-y-0 right-0 h-full w-3/4 border-l sm:max-w-sm",
          side === "left" &&
            "data-[state=closed]:slide-out-to-left data-[state=open]:slide-in-from-left inset-y-0 left-0 h-full w-3/4 border-r sm:max-w-sm",
          side === "top" &&
            "data-[state=closed]:slide-out-to-top data-[state=open]:slide-in-from-top inset-x-0 top-0 h-auto border-b",
          side === "bottom" &&
            "data-[state=closed]:slide-out-to-bottom data-[state=open]:slide-in-from-bottom inset-x-0 bottom-0 h-auto border-t",
          className
        )}
        {...props}
      >
        {children}
        <SheetPrimitive.Close className="ring-offset-background focus:ring-ring data-[state=open]:bg-secondary absolute top-4 right-4 rounded-xs opacity-70 transition-opacity hover:opacity-100 focus:ring-2 focus:ring-offset-2 focus:outline-hidden disabled:pointer-events-none">
          <XIcon className="size-4" />
          <span className="sr-only">Close</span>
        </SheetPrimitive.Close>
      </SheetPrimitive.Content>
    </SheetPortal>
  )
}

function SheetHeader({ className, ...props }: React.ComponentProps<"div">) {
  return (
    <div
      data-slot="sheet-header"
      className={cn("flex flex-col gap-1.5 p-4", className)}
      {...props}
    />
  )
}

function SheetFooter({ className, ...props }: React.ComponentProps<"div">) {
  return (
    <div
      data-slot="sheet-footer"
      className={cn("mt-auto flex flex-col gap-2 p-4", className)}
      {...props}
    />
  )
}

function SheetTitle({
  className,
  ...props
}: React.ComponentProps<typeof SheetPrimitive.Title>) {
  return (
    <SheetPrimitive.Title
      data-slot="sheet-title"
      className={cn("text-foreground font-semibold", className)}
      {...props}
    />
  )
}

function SheetDescription({
  className,
  ...props
}: React.ComponentProps<typeof SheetPrimitive.Description>) {
  return (
    <SheetPrimitive.Description
      data-slot="sheet-description"
      className={cn("text-muted-foreground text-sm", className)}
      {...props}
    />
  )
}

export {
  Sheet,
  SheetTrigger,
  SheetClose,
  SheetContent,
  SheetHeader,
  SheetFooter,
  SheetTitle,
  SheetDescription,
}

tabs.tsx
"use client"

import * as React from "react"
import * as TabsPrimitive from "@radix-ui/react-tabs"

import { cn } from "@/lib/utils"

function Tabs({
  className,
  ...props
}: React.ComponentProps<typeof TabsPrimitive.Root>) {
  return (
    <TabsPrimitive.Root
      data-slot="tabs"
      className={cn("flex flex-col gap-2", className)}
      {...props}
    />
  )
}

function TabsList({
  className,
  ...props
}: React.ComponentProps<typeof TabsPrimitive.List>) {
  return (
    <TabsPrimitive.List
      data-slot="tabs-list"
      className={cn(
        "bg-muted text-muted-foreground inline-flex h-9 w-fit items-center justify-center rounded-lg p-[3px]",
        className
      )}
      {...props}
    />
  )
}

function TabsTrigger({
  className,
  ...props
}: React.ComponentProps<typeof TabsPrimitive.Trigger>) {
  return (
    <TabsPrimitive.Trigger
      data-slot="tabs-trigger"
      className={cn(
        "data-[state=active]:bg-background dark:data-[state=active]:text-foreground focus-visible:border-ring focus-visible:ring-ring/50 focus-visible:outline-ring dark:data-[state=active]:border-input dark:data-[state=active]:bg-input/30 text-foreground dark:text-muted-foreground inline-flex h-[calc(100%-1px)] flex-1 items-center justify-center gap-1.5 rounded-md border border-transparent px-2 py-1 text-sm font-medium whitespace-nowrap transition-[color,box-shadow] focus-visible:ring-[3px] focus-visible:outline-1 disabled:pointer-events-none disabled:opacity-50 data-[state=active]:shadow-sm [&_svg]:pointer-events-none [&_svg]:shrink-0 [&_svg:not([class*='size-'])]:size-4",
        className
      )}
      {...props}
    />
  )
}

function TabsContent({
  className,
  ...props
}: React.ComponentProps<typeof TabsPrimitive.Content>) {
  return (
    <TabsPrimitive.Content
      data-slot="tabs-content"
      className={cn("flex-1 outline-none", className)}
      {...props}
    />
  )
}

export { Tabs, TabsList, TabsTrigger, TabsContent }

theme-provider.tsx
// src/components/ui/theme-provider.tsx
'use client'

import { ThemeProvider as NextThemesProvider } from 'next-themes'

export function ThemeProvider({
    children,
    ...props
}: {
    children: React.ReactNode
    [key: string]: any
}) {
    return <NextThemesProvider {...props}>{children}</NextThemesProvider>
}
lib/                  (–≤ –ø–∞–ø–∫–µ src)
utils.ts
import { clsx, type ClassValue } from "clsx"
import { twMerge } from "tailwind-merge"

export function cn(...inputs: ClassValue[]) {
  return twMerge(clsx(inputs))
}

 contexts/
 search-context.tsx
'use client'

import { createContext, useContext, useState } from 'react'
import { Product } from '@/lib/data'

interface SearchContextType {
    selectedProduct: Product | null
    setSelectedProduct: (product: Product | null) => void
}

const SearchContext = createContext<SearchContextType | undefined>(undefined)

export function SearchProvider({ children }: { children: React.ReactNode }) {
    const [selectedProduct, setSelectedProduct] = useState<Product | null>(null)

    return (
        <SearchContext.Provider value={{ selectedProduct, setSelectedProduct }}>
            {children}
        </SearchContext.Provider>
    )
}

export function useSearch() {
    const context = useContext(SearchContext)
    if (context === undefined) {
        throw new Error('useSearch must be used within a SearchProvider')
    }
    return context
}
 data/
index.ts
export * from "./products.types";

// –ò–º–ø–æ—Ä—Ç–∏—Ä—É–µ–º –≤—Å–µ –º–∞—Å—Å–∏–≤—ã —Ç–æ–≤–∞—Ä–æ–≤
import { pizzaProducts } from "./products/pizza";
import { burgersProducts } from "./products/burgers";
import { lavashProducts } from "./products/lavash";
import { hotdogsProducts } from "./products/hotdogs";
import { saladsProducts } from "./products/salads";
import { snacksProducts } from "./products/snacks";
import { soupsProducts } from "./products/soups";
import { rollsProducts } from "./products/rolls";
import { wokProducts } from "./products/wok";
import { dessertsProducts } from "./products/desserts";
import { drinksProducts } from "./products/drinks";
import { saucesProducts } from "./products/sauces";
import { sidesProducts } from "./products/sides";
import { extrasProducts } from "./products/extras";

// –û–±—ä–µ–¥–∏–Ω—è–µ–º –≤—Å–µ —Ç–æ–≤–∞—Ä—ã –≤ –æ–¥–∏–Ω –º–∞—Å—Å–∏–≤
export const products = [
  ...pizzaProducts,
  ...burgersProducts,
  ...lavashProducts,
  ...hotdogsProducts,
  ...saladsProducts,
  ...snacksProducts,
  ...soupsProducts,
  ...rollsProducts,
  ...wokProducts,
  ...dessertsProducts,
  ...drinksProducts,
  ...saucesProducts,
  ...sidesProducts,
  ...extrasProducts,
];

products.types.ts
export interface Product {
  id: number;
  name: string;
  price: number;
  description: string;
  image?: string;
  category: string;
}

products/ (–∑–¥–µ—Å—å —Ö—Ä–∞–Ω—è—Ç—Å—è –∫–∞—Ä—Ç–æ—á–∫–∏ —Ç–æ–≤–∞—Ä–æ–≤) (–∫–∞–∫ –ø—Ä–∏–º–µ—Ä –¥–æ–±–∞–≤–∏–ª 3 –≤—Å–µ–≥–æ –∏—Ö 14)

burgers.ts
import { Product } from "../products.types";

export const burgersProducts: Product[] = [
  {
    id: 17,
    name: "–ö–ª–∞—Å—Å–∏—á–µ—Å–∫–∞—è —à–∞—É—Ä–º–∞",
    price: 320,
    description:
      "–ë—É–ª–æ—á–∫–∞ –±—Ä–∏–æ—à—å, –∫–æ—Ç–ª–µ—Ç–∞ –∏–∑ –≥–æ–≤—è–¥–∏–Ω—ã, —Å—ã—Ä —á–µ–¥–¥–µ—Ä, —Å–æ—É—Å, —Å–∞–ª–∞—Ç, –ø–æ–º–∏–¥–æ—Ä, —Å–æ–ª–µ–Ω—ã–π –æ–≥—É—Ä—á–∏–∫.",
    category: "burgers",
    image: "/images/products/burgers/classic_cheese.jpg",
  },
  {
    id: 18,
    name: "–ì—Ä–∏–∏–±–Ω–∞—è —à–∞—É—Ä–º–∞",
    price: 380,
    description: "–° –∂–∞—Ä–µ–Ω—ã–º–∏ —à–∞–º–ø–∏–Ω—å–æ–Ω–∞–º–∏, –ª—É–∫–æ–º –∏ —Å–ª–∏–≤–æ—á–Ω—ã–º —Å–æ—É—Å–æ–º.",
    category: "burgers",
    image: "/images/products/burgers/mushroom.jpg",
  },
  {
    id: 19,
    name: "–®–∞—É—Ä–º–∞ —Å –∏–Ω–¥–µ–π–∫–æ–π ",
    price: 350,
    description:
      "–î–∏–µ—Ç–∏—á–µ—Å–∫–∏–π –≤–∞—Ä–∏–∞–Ω—Ç —Å —Å–æ—á–Ω–æ–π –∫–æ—Ç–ª–µ—Ç–æ–π –∏–∑ –∏–Ω–¥–µ–π–∫–∏ –∏ —Å–≤–µ–∂–∏–º–∏ –æ–≤–æ—â–∞–º–∏.",
    category: "burgers",
    image: "/images/products/burgers/turkey.jpg",
  },
  {
    id: 20,
    name: "–î–≤–æ–π–Ω–æ–π —á–∏–∑–±—É—Ä–≥–µ—Ä",
    price: 420,
    description: "–î–≤–µ –≥–æ–≤—è–∂—å–∏ –∫–æ—Ç–ª–µ—Ç—ã, –¥–≤–æ–π–Ω–æ–π —Å—ã—Ä, –±–µ–∫–æ–Ω –∏ —Å–æ—É—Å.",
    category: "burgers",
    image: "/images/products/burgers/double_cheese.jpg",
  },
  {
    id: 21,
    name: "–ß–∏–∫–µ–Ω–±—É—Ä–≥–µ—Ä",
    price: 300,
    description: "–° –∫—É—Ä–∏–Ω–æ–π –∫–æ—Ç–ª–µ—Ç–æ–π –≤ —Ö—Ä—É—Å—Ç—è—â–µ–π –ø–∞–Ω–∏—Ä–æ–≤–∫–µ –∏ —Å–≤–µ–∂–∏–º–∏ –æ–≤–æ—â–∞–º–∏.",
    category: "burgers",
    image: "/images/products/burgers/chicken.jpg",
  },
  {
    id: 22,
    name: "–í–µ–≥–µ—Ç–∞—Ä–∏–∞–Ω—Å–∫–∏–π –±—É—Ä–≥–µ—Ä",
    price: 340,
    description: "–° –æ–≤–æ—â–Ω–æ–π –∫–æ—Ç–ª–µ—Ç–æ–π, –∞–≤–æ–∫–∞–¥–æ –∏ —Å–æ—É—Å–æ–º –ø–µ—Å—Ç–æ.",
    category: "burgers",
    image: "/images/products/burgers/vegetarian.jpg",
  },
  {
    id: 23,
    name: "–ë—É—Ä–≥–µ—Ä BBQ",
    price: 390,
    description: "–° –≥–æ–≤—è–∂—å–µ–π –∫–æ—Ç–ª–µ—Ç–æ–π, –ª—É–∫–æ–º —Ñ—Ä–∏ –∏ —Å–æ—É—Å–æ–º –±–∞—Ä–±–µ–∫—é.",
    category: "burgers",
    image: "/images/products/burgers/bbq.jpg",
  },
];

desserts.ts
import { Product } from "../products.types";

export const dessertsProducts: Product[] = [
  {
    id: 86,
    name: "–ú–æ—Ä–æ–∂–µ–Ω–æ–µ –ø–ª–æ–º–±–∏—Ä",
    price: 120,
    description: "–®–∞—Ä–∏–∫ –Ω–∞—Å—Ç–æ—è—â–µ–≥–æ –ø–ª–æ–º–±–∏—Ä–∞ –≤ –≤–∞—Ñ–µ–ª—å–Ω–æ–º —Å—Ç–∞–∫–∞–Ω—á–∏–∫–µ.",
    category: "desserts",
    image: "/images/products/desserts/ice_cream.jpg",
  },
  {
    id: 87,
    name: "–ß–∏–∑–∫–µ–π–∫",
    price: 250,
    description: "–ù–µ–∂–Ω—ã–π —á–∏–∑–∫–µ–π–∫ –ù—å—é-–ô–æ—Ä–∫ –Ω–∞ –ø–µ—Å–æ—á–Ω–æ–π –æ—Å–Ω–æ–≤–µ.",
    category: "desserts",
    image: "/images/products/desserts/cheesecake.jpg",
  },
  {
    id: 88,
    name: "–¢–∏—Ä–∞–º–∏—Å—É",
    price: 270,
    description: "–ö–ª–∞—Å—Å–∏—á–µ—Å–∫–∏–π –∏—Ç–∞–ª—å—è–Ω—Å–∫–∏–π –¥–µ—Å–µ—Ä—Ç —Å –∫–æ—Ñ–µ–π–Ω–æ–π –ø—Ä–æ–ø–∏—Ç–∫–æ–π.",
    category: "desserts",
    image: "/images/products/desserts/tiramisu.jpg",
  },
  {
    id: 89,
    name: "–ú–µ–¥–æ–≤–∏–∫",
    price: 230,
    description: "–ù–µ–∂–Ω—ã–π –º–µ–¥–æ–≤—ã–π —Ç–æ—Ä—Ç —Å–æ —Å–º–µ—Ç–∞–Ω–Ω—ã–º –∫—Ä–µ–º–æ–º.",
    category: "desserts",
    image: "/images/products/desserts/medovik.jpg",
  },
  {
    id: 90,
    name: "–≠–∫–ª–µ—Ä",
    price: 150,
    description: "–ó–∞–≤–∞—Ä–Ω–æ–µ –ø–∏—Ä–æ–∂–Ω–æ–µ —Å –∑–∞–≤–∞—Ä–Ω—ã–º –∫—Ä–µ–º–æ–º.",
    category: "desserts",
    image: "/images/products/desserts/eclair.jpg",
  },
  {
    id: 91,
    name: "–ú–∞–∫–∞—Ä—É–Ω",
    price: 180,
    description: "–ù–µ–∂–Ω–æ–µ –≤–æ–∑–¥—É—à–Ω–æ–µ –ø–∏—Ä–æ–∂–Ω–æ–µ —Å –Ω–∞—á–∏–Ω–∫–æ–π.",
    category: "desserts",
    image: "/images/products/desserts/macaroon.jpg",
  },
  {
    id: 92,
    name: "–®–æ–∫–æ–ª–∞–¥–Ω—ã–π —Ç–æ—Ä—Ç",
    price: 280,
    description: "–í–ª–∞–∂–Ω—ã–π —à–æ–∫–æ–ª–∞–¥–Ω—ã–π —Ç–æ—Ä—Ç —Å —à–æ–∫–æ–ª–∞–¥–Ω–æ–π –≥–ª–∞–∑—É—Ä—å—é.",
    category: "desserts",
    image: "/images/products/desserts/chocolate_cake.jpg",
  },
];

drinks.ts
import { Product } from "../products.types";

export const drinksProducts: Product[] = [
  {
    id: 93,
    name: "–ö–æ–ª–∞ / –°–ø—Ä–∞–π—Ç / –§–∞–Ω—Ç–∞ 0.5–ª",
    price: 100,
    description: "–û—Å–≤–µ–∂–∞—é—â–∏–µ –≥–∞–∑–∏—Ä–æ–≤–∞–Ω–Ω—ã–µ –Ω–∞–ø–∏—Ç–∫–∏.",
    category: "drinks",
    image: "/images/products/drinks/soda.jpg",
  },
  {
    id: 94,
    name: "–ú–æ—Ä—Å —è–≥–æ–¥–Ω—ã–π",
    price: 130,
    description: "–î–æ–º–∞—à–Ω–∏–π —è–≥–æ–¥–Ω—ã–π –º–æ—Ä—Å, –∫–ª—é–∫–≤–µ–Ω–Ω—ã–π –∏–ª–∏ –æ–±–ª–µ–ø–∏—Ö–æ–≤—ã–π.",
    category: "drinks",
    image: "/images/products/drinks/mors.jpg",
  },
  {
    id: 95,
    name: "–°–æ–∫",
    price: 120,
    description: "–ê–ø–µ–ª—å—Å–∏–Ω–æ–≤—ã–π, —è–±–ª–æ—á–Ω—ã–π, —Ç–æ–º–∞—Ç–Ω—ã–π –∏–ª–∏ –º—É–ª—å—Ç–∏—Ñ—Ä—É–∫—Ç.",
    category: "drinks",
    image: "/images/products/drinks/juice.jpg",
  },
  {
    id: 96,
    name: "–õ–∏–º–æ–Ω–∞–¥",
    price: 150,
    description: "–î–æ–º–∞—à–Ω–∏–π –ª–∏–º–æ–Ω–∞–¥ —Å –º—è—Ç–æ–π –∏ –ª–∏–º–æ–Ω–æ–º.",
    category: "drinks",
    image: "/images/products/drinks/lemonade.jpg",
  },
  {
    id: 97,
    name: "–≠–Ω–µ—Ä–≥–µ—Ç–∏–∫",
    price: 180,
    description: "–ë–∞–ª—Ç–∏–º–æ—Ä, –†–µ–¥ –ë—É–ª–ª –∏–ª–∏ –ë–µ—Ä–Ω.",
    category: "drinks",
    image: "/images/products/drinks/energy_drink.jpg",
  },
  {
    id: 98,
    name: "–í–æ–¥–∞",
    price: 80,
    description: "–ú–∏–Ω–µ—Ä–∞–ª—å–Ω–∞—è –≤–æ–¥–∞ –±–µ–∑ –≥–∞–∑–∞ 0.5–ª.",
    category: "drinks",
    image: "/images/products/drinks/water.jpg",
  },
  {
    id: 99,
    name: "–ê–º–µ—Ä–∏–∫–∞–Ω–æ",
    price: 150,
    description: "–ö–ª–∞—Å—Å–∏—á–µ—Å–∫–∏–π —á–µ—Ä–Ω—ã–π –∫–æ—Ñ–µ.",
    category: "drinks",
    image: "/images/products/drinks/americano.jpg",
  },
  {
    id: 100,
    name: "–ö–∞–ø—É—á–∏–Ω–æ",
    price: 180,
    description: "–ö–æ—Ñ–µ —Å –º–æ–ª–æ—á–Ω–æ–π –ø–µ–Ω–∫–æ–π.",
    category: "drinks",
    image: "/images/products/drinks/cappuccino.jpg",
  },
  {
    id: 101,
    name: "–õ–∞—Ç—Ç–µ",
    price: 190,
    description: "–ö–æ—Ñ–µ —Å –±–æ–ª—å—à–∏–º –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ–º –º–æ–ª–æ–∫–∞.",
    category: "drinks",
    image: "/images/products/drinks/latte.jpg",
  },
  {
    id: 102,
    name: "–≠—Å–ø—Ä–µ—Å—Å–æ",
    price: 120,
    description: "–ö—Ä–µ–ø–∫–∏–π —á–µ—Ä–Ω—ã–π –∫–æ—Ñ–µ –º–∞–ª–µ–Ω—å–∫–∏–º–∏ –ø–æ—Ä—Ü–∏—è–º–∏.",
    category: "drinks",
    image: "/images/products/drinks/espresso.jpg",
  },
  {
    id: 103,
    name: "–ß–∞–π —á–µ—Ä–Ω—ã–π",
    price: 100,
    description: "–ö–ª–∞—Å—Å–∏—á–µ—Å–∫–∏–π —á–µ—Ä–Ω—ã–π —á–∞–π.",
    category: "drinks",
    image: "/images/products/drinks/black_tea.jpg",
  },
  {
    id: 104,
    name: "–ß–∞–π –∑–µ–ª–µ–Ω—ã–π",
    price: 100,
    description: "–ó–µ–ª–µ–Ω—ã–π —á–∞–π —Å –∂–∞—Å–º–∏–Ω–æ–º.",
    category: "drinks",
    image: "/images/products/drinks/green_tea.jpg",
  },
  {
    id: 105,
    name: "–ú–æ–ª–æ—á–Ω—ã–π –∫–æ–∫—Ç–µ–π–ª—å",
    price: 220,
    description: "–í–∞–Ω–∏–ª—å–Ω—ã–π, —à–æ–∫–æ–ª–∞–¥–Ω—ã–π –∏–ª–∏ –∫–ª—É–±–Ω–∏—á–Ω—ã–π.",
    category: "drinks",
    image: "/images/products/drinks/milkshake.jpg",
  },
  {
    id: 106,
    name: "–ö–æ–º–ø–æ—Ç",
    price: 110,
    description: "–î–æ–º–∞—à–Ω–∏–π –∫–æ–º–ø–æ—Ç –∏–∑ —Å—É—Ö–æ—Ñ—Ä—É–∫—Ç–æ–≤.",
    category: "drinks",
    image: "/images/products/drinks/compote.jpg",
  },
  {
    id: 107,
    name: "–°–º—É–∑–∏",
    price: 240,
    description: "–§—Ä—É–∫—Ç–æ–≤—ã–π –∏–ª–∏ —è–≥–æ–¥–Ω—ã–π —Å–º—É–∑–∏.",
    category: "drinks",
    image: "/images/products/drinks/smoothie.jpg",
  },
];

stores/
cart-store.ts


// src/lib/stores/cart-store.ts
import { create } from "zustand";
import { persist } from "zustand/middleware";

// –¢–∏–ø —Ç–æ–≤–∞—Ä–∞, –∫–æ—Ç–æ—Ä—ã–π –±—É–¥–µ—Ç —Ö—Ä–∞–Ω–∏—Ç—å—Å—è –≤ –∫–æ—Ä–∑–∏–Ω–µ. –†–∞—Å—à–∏—Ä—è–µ–º –±–∞–∑–æ–≤—ã–π Product.
export interface CartItem {
  id: number;
  name: string;
  price: number;
  image?: string;
  quantity: number; // –î–æ–±–∞–≤–ª—è–µ–º –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –¥–ª—è –∫–∞–∂–¥–æ–≥–æ —Ç–æ–≤–∞—Ä–∞
}

// –¢–∏–ø –Ω–∞—à–µ–≥–æ —Ö—Ä–∞–Ω–∏–ª–∏—â–∞
interface CartStore {
  items: CartItem[];
  // –î–æ–±–∞–≤–∏—Ç—å —Ç–æ–≤–∞—Ä –≤ –∫–æ—Ä–∑–∏–Ω—É
  addItem: (product: Omit<CartItem, "quantity">) => void;
  // –£–¥–∞–ª–∏—Ç—å —Ç–æ–≤–∞—Ä –∏–∑ –∫–æ—Ä–∑–∏–Ω—ã –ø–æ–ª–Ω–æ—Å—Ç—å—é
  removeItem: (id: number) => void;
  // –ò–∑–º–µ–Ω–∏—Ç—å –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –∫–æ–Ω–∫—Ä–µ—Ç–Ω–æ–≥–æ —Ç–æ–≤–∞—Ä–∞
  updateQuantity: (id: number, quantity: number) => void;
  // –û—á–∏—Å—Ç–∏—Ç—å –≤—Å—é –∫–æ—Ä–∑–∏–Ω—É
  clearCart: () => void;
  // –í—ã—á–∏—Å–ª–∏—Ç—å –æ–±—â—É—é —Å—Ç–æ–∏–º–æ—Å—Ç—å (–≥–µ—Ç—Ç–µ—Ä)
  totalPrice: () => number;
  // –í—ã—á–∏—Å–ª–∏—Ç—å –æ–±—â–µ–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ —Ç–æ–≤–∞—Ä–æ–≤ (–≥–µ—Ç—Ç–µ—Ä)
  totalItems: () => number;
}

// –°–æ–∑–¥–∞–µ–º —Ö—Ä–∞–Ω–∏–ª–∏—â–µ. Persist middleware –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏ —Å–æ—Ö—Ä–∞–Ω—è–µ—Ç –∫–æ—Ä–∑–∏–Ω—É –≤ localStorage.
export const useCartStore = create<CartStore>()(
  persist(
    (set, get) => ({
      // –ù–∞—á–∞–ª—å–Ω–æ–µ —Å–æ—Å—Ç–æ—è–Ω–∏–µ - –ø—É—Å—Ç–æ–π –º–∞—Å—Å–∏–≤ —Ç–æ–≤–∞—Ä–æ–≤
      items: [],

      // –î–æ–±–∞–≤–ª–µ–Ω–∏–µ —Ç–æ–≤–∞—Ä–∞
      addItem: (product) => {
        set((state) => {
          // –ü—Ä–æ–≤–µ—Ä—è–µ–º, –µ—Å—Ç—å –ª–∏ —Ç–æ–≤–∞—Ä —É–∂–µ –≤ –∫–æ—Ä–∑–∏–Ω–µ
          const existingItem = state.items.find(
            (item) => item.id === product.id
          );

          if (existingItem) {
            // –ï—Å–ª–∏ –µ—Å—Ç—å - —É–≤–µ–ª–∏—á–∏–≤–∞–µ–º –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ
            const updatedItems = state.items.map((item) =>
              item.id === product.id
                ? { ...item, quantity: item.quantity + 1 }
                : item
            );
            return { items: updatedItems };
          } else {
            // –ï—Å–ª–∏ –Ω–µ—Ç - –¥–æ–±–∞–≤–ª—è–µ–º –Ω–æ–≤—ã–π —Ç–æ–≤–∞—Ä —Å –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ–º 1
            return { items: [...state.items, { ...product, quantity: 1 }] };
          }
        });
      },

      // –£–¥–∞–ª–µ–Ω–∏–µ —Ç–æ–≤–∞—Ä–∞
      removeItem: (id) => {
        set((state) => ({
          items: state.items.filter((item) => item.id !== id),
        }));
      },

      // –ò–∑–º–µ–Ω–µ–Ω–∏–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–∞
      updateQuantity: (id, quantity) => {
        if (quantity <= 0) {
          // –ï—Å–ª–∏ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ 0 –∏–ª–∏ –º–µ–Ω—å—à–µ - —É–¥–∞–ª—è–µ–º —Ç–æ–≤–∞—Ä
          get().removeItem(id);
          return;
        }

        set((state) => ({
          items: state.items.map((item) =>
            item.id === id ? { ...item, quantity } : item
          ),
        }));
      },

      // –û—á–∏—Å—Ç–∫–∞ –∫–æ—Ä–∑–∏–Ω—ã
      clearCart: () => {
        set({ items: [] });
      },

      // –ü–æ–¥—Å—á–µ—Ç –æ–±—â–µ–π —Å—É–º–º—ã
      totalPrice: () => {
        const { items } = get();
        return items.reduce(
          (total, item) => total + item.price * item.quantity,
          0
        );
      },

      // –ü–æ–¥—Å—á–µ—Ç –æ–±—â–µ–≥–æ –∫–æ–ª–∏—á–µ—Å—Ç–≤–∞ —Ç–æ–≤–∞—Ä–æ–≤
      totalItems: () => {
        const { items } = get();
        return items.reduce((total, item) => total + item.quantity, 0);
      },
    }),
    {
      name: "cart-storage", // –ö–ª—é—á –¥–ª—è localStorage
    }
  )
);


.gitignore
 components.json        
 eslint.config.mjs
next-env.d.ts
next.config.ts
 package.json
 package-lock.json
 postcss.config.mjs
 README.md
tsconfig.json 